#include <stdio.h>
#include <stdlib.h>

#define MAX 100

struct Queue {
    int front, rear, size;
    int arr[MAX];
};

void enqueue(struct Queue* queue, int data) {
    if (queue->size == MAX) {
        printf("Queue Overflow\n");
        return;
    }
    queue->rear = (queue->rear + 1) % MAX;
    queue->arr[queue->rear] = data;
    queue->size++;
}

int dequeue(struct Queue* queue) {
    if (queue->size == 0) {
        printf("Queue Underflow\n");
        return -1;
    }
    int data = queue->arr[queue->front];
    queue->front = (queue->front + 1) % MAX;
    queue->size--;
    return data;
}

void display(struct Queue* queue) {
    if (queue->size == 0) {
        printf("Queue is Empty\n");
        return;
    }
    for (int i = 0; i < queue->size; i++)
        printf("%d ", queue->arr[(queue->front + i) % MAX]);
    printf("\n");
}

int main() {
    struct Queue queue;
    queue.front = 0;
    queue.rear = -1;
    queue.size = 0;

    enqueue(&queue, 1);
    enqueue(&queue, 2);
    enqueue(&queue, 3);
    printf("Queue: ");
    display(&queue);

    printf("Dequeued: %d\n", dequeue(&queue));
    printf("Queue after dequeue: ");
    display(&queue);

    return 0;
}
